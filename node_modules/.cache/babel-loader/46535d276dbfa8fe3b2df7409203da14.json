{"ast":null,"code":"import { ADD_TO_CART, UPDATE_CART, REMOVE_FROM_CART, CHECKOUT, SET_DELIVERY_CHOICE } from \"../actions/actionTypes\";\nconst initialState = {\n  items: localStorage.getItem(\"items\") ? JSON.parse(localStorage.getItem(\"items\")) : [],\n  delivery: \"standard\"\n};\n\nconst mapItem = (item, payload) => {\n  if (item.id === payload.product.id) {\n    return { ...item,\n      quantity: item.quantity + 1\n    };\n  }\n\n  return item;\n};\n\nconst updateMapItem = (item, payload) => {\n  if (item.id === payload.id) {\n    return { ...item,\n      quantity: payload.quantity\n    };\n  }\n\n  return item;\n};\n\nconst filterItem = (item, payload) => item.id !== payload.id;\n\nconst cart = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ADD_TO_CART:\n      const itemFound = !!state.items.find(item => item.id === payload.product.id);\n\n      if (itemFound) {\n        return { ...state,\n          items: state.items.map(item => mapItem(item, payload))\n        };\n      }\n\n      return { ...state,\n        items: [{ ...payload.product,\n          quantity: 1\n        }, ...state.items]\n      };\n\n    case REMOVE_FROM_CART:\n      return { ...state,\n        items: state.items.filter(item => filterItem(item, payload))\n      };\n\n    case UPDATE_CART:\n      return { ...state,\n        items: state.items.map(item => updateMapItem(item, payload))\n      };\n\n    case SET_DELIVERY_CHOICE:\n      return { ...state,\n        delivery: payload.choice\n      };\n\n    case CHECKOUT:\n      return {\n        delivery: \"standard\",\n        items: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cart;","map":{"version":3,"sources":["/media/haddad/6a8a543b-c57b-47b0-a06e-396959f42841/sandra-udemy/marketplace/client/src/lib/state/reducers/cart.js"],"names":["ADD_TO_CART","UPDATE_CART","REMOVE_FROM_CART","CHECKOUT","SET_DELIVERY_CHOICE","initialState","items","localStorage","getItem","JSON","parse","delivery","mapItem","item","payload","id","product","quantity","updateMapItem","filterItem","cart","state","type","itemFound","find","map","filter","choice"],"mappings":"AAAA,SACEA,WADF,EAEEC,WAFF,EAGEC,gBAHF,EAIEC,QAJF,EAKEC,mBALF,QAMO,wBANP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,IACHC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CADG,GAEH,EAHe;AAInBG,EAAAA,QAAQ,EAAE;AAJS,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACjC,MAAID,IAAI,CAACE,EAAL,KAAYD,OAAO,CAACE,OAAR,CAAgBD,EAAhC,EAAoC;AAClC,WAAO,EAAE,GAAGF,IAAL;AAAWI,MAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAAL,GAAgB;AAArC,KAAP;AACD;;AACD,SAAOJ,IAAP;AACD,CALD;;AAMA,MAAMK,aAAa,GAAG,CAACL,IAAD,EAAOC,OAAP,KAAmB;AACvC,MAAID,IAAI,CAACE,EAAL,KAAYD,OAAO,CAACC,EAAxB,EAA4B;AAC1B,WAAO,EAAE,GAAGF,IAAL;AAAWI,MAAAA,QAAQ,EAAEH,OAAO,CAACG;AAA7B,KAAP;AACD;;AACD,SAAOJ,IAAP;AACD,CALD;;AAMA,MAAMM,UAAU,GAAG,CAACN,IAAD,EAAOC,OAAP,KAAmBD,IAAI,CAACE,EAAL,KAAYD,OAAO,CAACC,EAA1D;;AAEA,MAAMK,IAAI,GAAG,CAACC,KAAK,GAAGhB,YAAT,EAAuB;AAAEiB,EAAAA,IAAF;AAAQR,EAAAA;AAAR,CAAvB,KAA6C;AACxD,UAAQQ,IAAR;AACE,SAAKtB,WAAL;AACE,YAAMuB,SAAS,GAAG,CAAC,CAACF,KAAK,CAACf,KAAN,CAAYkB,IAAZ,CACjBX,IAAD,IAAUA,IAAI,CAACE,EAAL,KAAYD,OAAO,CAACE,OAAR,CAAgBD,EADpB,CAApB;;AAGA,UAAIQ,SAAJ,EAAe;AACb,eAAO,EACL,GAAGF,KADE;AAELf,UAAAA,KAAK,EAAEe,KAAK,CAACf,KAAN,CAAYmB,GAAZ,CAAiBZ,IAAD,IAAUD,OAAO,CAACC,IAAD,EAAOC,OAAP,CAAjC;AAFF,SAAP;AAID;;AACD,aAAO,EACL,GAAGO,KADE;AAELf,QAAAA,KAAK,EAAE,CAAC,EAAE,GAAGQ,OAAO,CAACE,OAAb;AAAsBC,UAAAA,QAAQ,EAAE;AAAhC,SAAD,EAAsC,GAAGI,KAAK,CAACf,KAA/C;AAFF,OAAP;;AAIF,SAAKJ,gBAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELf,QAAAA,KAAK,EAAEe,KAAK,CAACf,KAAN,CAAYoB,MAAZ,CAAoBb,IAAD,IAAUM,UAAU,CAACN,IAAD,EAAOC,OAAP,CAAvC;AAFF,OAAP;;AAIF,SAAKb,WAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELf,QAAAA,KAAK,EAAEe,KAAK,CAACf,KAAN,CAAYmB,GAAZ,CAAiBZ,IAAD,IAAUK,aAAa,CAACL,IAAD,EAAOC,OAAP,CAAvC;AAFF,OAAP;;AAIF,SAAKV,mBAAL;AACE,aAAO,EAAE,GAAGiB,KAAL;AAAYV,QAAAA,QAAQ,EAAEG,OAAO,CAACa;AAA9B,OAAP;;AACF,SAAKxB,QAAL;AACE,aAAO;AAAEQ,QAAAA,QAAQ,EAAE,UAAZ;AAAwBL,QAAAA,KAAK,EAAE;AAA/B,OAAP;;AACF;AACE,aAAOe,KAAP;AA9BJ;AAgCD,CAjCD;;AAkCA,eAAeD,IAAf","sourcesContent":["import {\n  ADD_TO_CART,\n  UPDATE_CART,\n  REMOVE_FROM_CART,\n  CHECKOUT,\n  SET_DELIVERY_CHOICE,\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n  items: localStorage.getItem(\"items\")\n    ? JSON.parse(localStorage.getItem(\"items\"))\n    : [],\n  delivery: \"standard\",\n};\n\nconst mapItem = (item, payload) => {\n  if (item.id === payload.product.id) {\n    return { ...item, quantity: item.quantity + 1 };\n  }\n  return item;\n};\nconst updateMapItem = (item, payload) => {\n  if (item.id === payload.id) {\n    return { ...item, quantity: payload.quantity };\n  }\n  return item;\n};\nconst filterItem = (item, payload) => item.id !== payload.id;\n\nconst cart = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_TO_CART:\n      const itemFound = !!state.items.find(\n        (item) => item.id === payload.product.id\n      );\n      if (itemFound) {\n        return {\n          ...state,\n          items: state.items.map((item) => mapItem(item, payload)),\n        };\n      }\n      return {\n        ...state,\n        items: [{ ...payload.product, quantity: 1 }, ...state.items],\n      };\n    case REMOVE_FROM_CART:\n      return {\n        ...state,\n        items: state.items.filter((item) => filterItem(item, payload)),\n      };\n    case UPDATE_CART:\n      return {\n        ...state,\n        items: state.items.map((item) => updateMapItem(item, payload)),\n      };\n    case SET_DELIVERY_CHOICE:\n      return { ...state, delivery: payload.choice };\n    case CHECKOUT:\n      return { delivery: \"standard\", items: [] };\n    default:\n      return state;\n  }\n};\nexport default cart;\n"]},"metadata":{},"sourceType":"module"}