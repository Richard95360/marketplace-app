{"ast":null,"code":"import * as Realm from \"realm-web\";\nimport { app } from '../../service/mongoDB-sdk';\n\nconst useAuthentication = dispatch => {\n  function handleUserRegistration(newUser) {\n    return new Promise(resolve => {\n      app.emailPasswordAuth.registerUser(newUser.email, newUser.password).then(() => {\n        const credentials = Realm.Credentials.emailPassword(newUser.email, newUser.password);\n        re;\n        app.logIn(credentials).then(user => console.log(user));\n      });\n    });\n  }\n\n  return {\n    handleUserRegistration\n  };\n};\n\nexport default useAuthentication;","map":{"version":3,"sources":["/media/haddad/6a8a543b-c57b-47b0-a06e-396959f42841/sandra-udemy/marketplace/client/src/lib/hooks/useAuthentication/index.js"],"names":["Realm","app","useAuthentication","dispatch","handleUserRegistration","newUser","Promise","resolve","emailPasswordAuth","registerUser","email","password","then","credentials","Credentials","emailPassword","re","logIn","user","console","log"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,WAAvB;AACA,SAAQC,GAAR,QAAkB,2BAAlB;;AAEA,MAAMC,iBAAiB,GAAKC,QAAD,IAAc;AACrC,WAASC,sBAAT,CAAgCC,OAAhC,EAAyC;AACrC,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC5BN,MAAAA,GAAG,CAACO,iBAAJ,CACCC,YADD,CACcJ,OAAO,CAACK,KADtB,EAC6BL,OAAO,CAACM,QADrC,EAECC,IAFD,CAEM,MAAM;AACV,cAAMC,WAAW,GAAGb,KAAK,CAACc,WAAN,CAAkBC,aAAlB,CAChBV,OAAO,CAACK,KADQ,EAEhBL,OAAO,CAACM,QAFQ,CAApB;AAIIK,QAAAA,EAAE;AACJf,QAAAA,GAAG,CAACgB,KAAJ,CAAUJ,WAAV,EAAuBD,IAAvB,CAA4BM,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAApC;AACH,OATD;AAUH,KAXM,CAAP;AAYH;;AACD,SAAO;AACHd,IAAAA;AADG,GAAP;AAGH,CAlBD;;AAoBA,eAAeF,iBAAf","sourcesContent":["import * as Realm from \"realm-web\";\nimport {app} from '../../service/mongoDB-sdk';\n\nconst useAuthentication =  (dispatch) => {\n    function handleUserRegistration(newUser) {\n        return new Promise((resolve) => {\n            app.emailPasswordAuth\n            .registerUser(newUser.email, newUser.password)\n            .then(() => {\n              const credentials = Realm.Credentials.emailPassword(\n                  newUser.email, \n                  newUser.password\n                  );\n                  re\n                app.logIn(credentials).then(user => console.log(user))\n            });\n        });\n    }\n    return {\n        handleUserRegistration,\n    };\n};\n\nexport default useAuthentication;"]},"metadata":{},"sourceType":"module"}